package com.speedment.examples.generated.socialnetwork.db0.socialnetwork.link.generated;

import com.speedment.common.annotation.GeneratedCode;
import com.speedment.examples.generated.socialnetwork.db0.socialnetwork.link.Link;
import com.speedment.examples.generated.socialnetwork.db0.socialnetwork.user.User;
import com.speedment.runtime.config.identifier.ColumnIdentifier;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.Manager;
import com.speedment.runtime.field.LongForeignKeyField;
import com.speedment.runtime.typemapper.TypeMapper;

/**
 * The generated base for the {@link
 * com.speedment.examples.generated.socialnetwork.db0.socialnetwork.link.Link}-interface
 * representing entities of the {@code link}-table in the database.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public interface GeneratedLink {
    
    /**
     * This Field corresponds to the {@link Link} field that can be obtained
     * using the {@link Link#getFollower()} method.
     */
    LongForeignKeyField<Link, Long, User> FOLLOWER = LongForeignKeyField.create(
        Identifier.FOLLOWER,
        Link::getFollower,
        Link::setFollower,
        User.ID,
        TypeMapper.primitive(),
        false
    );
    /**
     * This Field corresponds to the {@link Link} field that can be obtained
     * using the {@link Link#getFollows()} method.
     */
    LongForeignKeyField<Link, Long, User> FOLLOWS = LongForeignKeyField.create(
        Identifier.FOLLOWS,
        Link::getFollows,
        Link::setFollows,
        User.ID,
        TypeMapper.primitive(),
        false
    );
    
    /**
     * Returns the follower of this Link. The follower field corresponds to the
     * database column db0.socialnetwork.link.follower.
     * 
     * @return the follower of this Link
     */
    long getFollower();
    
    /**
     * Returns the follows of this Link. The follows field corresponds to the
     * database column db0.socialnetwork.link.follows.
     * 
     * @return the follows of this Link
     */
    long getFollows();
    
    /**
     * Sets the follower of this Link. The follower field corresponds to the
     * database column db0.socialnetwork.link.follower.
     * 
     * @param follower to set of this Link
     * @return         this Link instance
     */
    Link setFollower(long follower);
    
    /**
     * Sets the follows of this Link. The follows field corresponds to the
     * database column db0.socialnetwork.link.follows.
     * 
     * @param follows to set of this Link
     * @return        this Link instance
     */
    Link setFollows(long follows);
    
    /**
     * Queries the specified manager for the referenced User. If no such User
     * exists, an {@code NullPointerException} will be thrown.
     * 
     * @param foreignManager the manager to query for the entity
     * @return               the foreign entity referenced
     */
    User findFollower(Manager<User> foreignManager);
    
    /**
     * Queries the specified manager for the referenced User. If no such User
     * exists, an {@code NullPointerException} will be thrown.
     * 
     * @param foreignManager the manager to query for the entity
     * @return               the foreign entity referenced
     */
    User findFollows(Manager<User> foreignManager);
    
    enum Identifier implements ColumnIdentifier<Link> {
        
        FOLLOWER ("follower"),
        FOLLOWS  ("follows");
        
        private final String columnId;
        private final TableIdentifier<Link> tableIdentifier;
        
        Identifier(String columnId) {
            this.columnId        = columnId;
            this.tableIdentifier = TableIdentifier.of(    getDbmsId(), 
                getSchemaId(), 
                getTableId());
        }
        
        @Override
        public String getDbmsId() {
            return "db0";
        }
        
        @Override
        public String getSchemaId() {
            return "socialnetwork";
        }
        
        @Override
        public String getTableId() {
            return "link";
        }
        
        @Override
        public String getColumnId() {
            return this.columnId;
        }
        
        @Override
        public TableIdentifier<Link> asTableIdentifier() {
            return this.tableIdentifier;
        }
    }
}